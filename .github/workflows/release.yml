name: Release
on:
  push:
    tags:
      - 'v*.**'

permissions:
  contents: write

jobs:
  release:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install pnpm
        run: npm i -g pnpm
      # 缓存 node_modules
      - name: Cache dependencies
        uses: actions/cache@v3
        id: pnpm-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      # 如果缓存没有命中，安装依赖
      - name: Install dependencies
        if: steps.pnpm-cache.outputs.cache-hit != 'true'
        run: pnpm i

      - name: Publish releases
        env:
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pnpm build --publish never
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "release/!(*.exe)"
      - name: cleanup artifacts for ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          npx rimraf "release/!(*.deb)"
      #      # step6: upload artifacts
      #      - name: upload artifacts
      #        uses: actions/upload-artifact@v2
      #        with:
      #          name: ${{ matrix.os }}
      #          path: release

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: 'release/**'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create github releases
        run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
